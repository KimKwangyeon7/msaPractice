#spring.application.name=auth-service
server:
  base-url: localhost
  port: 9443
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  ssl:
    enabled: false
#    key-store: classpath:keystore.p12
#    key-store-password: 8llow8llowme
#    key-store-type: PKCS12
spring:
  application:
    name: auth-service
  devtools:
    restart:
      enabled: false
  jpa:
    open-in-view: false
    defer-datasource-initialization: false
    generate-ddl: false
    hibernate:
      ddl-auto: update          # ddl 자동 작성 여부
    properties:
      hibernate:
        database-platform: org.hibernate.dialect.MySQLDialect
        format_sql: true             # 하이버네이트가 실행한 SQL을 출력할 때 보기 좋게 정렬
        use_sql_comments: true
        show_sql: true               # 하이버네이트가 실행한 SQL을 출력
        jdbc:
          batch_size: 100              #   insert/update 쿼리를 원하는 개수만큼 모아서 DB에 날릴 수 있는 옵션
        default_batch_fetch_size: 100

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver  # DB ????
    url: jdbc:mysql://localhost:3307/spring?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true     # ?????? URL
    username: root                    # ?????? ???
    password: 8llow8llowme                   # ?????? ?? ????

  # data_????.sql ?? ?? setting (?????)
  #  sql:
  #    init:
  #      mode: always
  #      data-locations:
  #        - 'classpath:/db/dummy/FOREIGN_KEY_CHECKS_0.sql'
  #        - 'classpath:/db/dummy/db_dump.sql'
  #        - 'classpath:/db/dummy/db_dump1.sql'
  #        - 'classpath:/db/dummy/db_dump2.sql'
  #        - 'classpath:/db/dummy/FOREIGN_KEY_CHECKS_1.sql'

  # NoSQL setting
  data:
    # Redis setting
    redis:
      host: localhost
      port: 6379

  # JSP Setting
  mvc:
    view:
      prefix: /WEB-INF/views/
      suffix: .jsp

jwt:
  accessKey: "w7Dd0jmlEjFvWfnH8xCyAaD4J9KeShMQEfK5TZZjbgM="
  refreshKey: "YrLk76XDh9TaBtKxN+WxMr1Zm+zKlOPUv6RJqz9TZYI="
  accessExpiration: PT420M  # 420분 (PT420M)
  refreshExpiration: PT10080M  # 10080분 (7일) (PT10080M)

# log 관리
logging:
  level:
    org.springframework.security: DEBUG
    org.hibernate:
      type.descriptor.sql: trace
      org.hibernate.SQLQuery: debug

# firebase setting
app:
  firebase-configuration-file: classpath:serviceAccountKey.json
  #  firebase-bucket: ENC(kEjE5eNrPFCEldmd4VOt0mXnXI2qkPVNJIhOBdW8K60=)
  firebase-project-id: msapractice-cecd2

oauth:
  kakao:
    client-id: e1be41bbfbb498c203c87ef3b5a7edc3 # REST API 키
    client-secret: a6QyXOAtiuidFN4mOt44ZrvuRciYGwCx # 보안 -> Client Secret 키
    redirect-uri: http://${server.base-url}:8443/auth/oauth/KAKAO/login
    scope:
      - profile_nickname
      - profile_image
      - account_email

  naver:
    client-id: x9qq5Pv4FAaKJ5ucg7nb
    client-secret: XBXvtSGQ_y
    redirect_uri: http://${server.base-url}:8443/auth/oauth/NAVER/login
    scope:
      - nickname
      - name
      - email
      - profile_image
  google:
    client_id: 1024320194618-l8oie7ap8j0p36utia6jr0bup4md6t7s.apps.googleusercontent.com
    client_secret: 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
    redirect_uri: http://${server.base-url}:8443/auth/oauth/GOOGLE/login
    scope:
      - profile
      - email

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/ # Eureka ?? ??