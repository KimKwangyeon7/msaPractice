services:
  # Redis 설정
  redis:
    image: redis # 사용할 Docker 이미지. 이 경우 공식 Redis 이미지를 사용합니다.
    container_name: redis # 생성될 Docker 컨테이너의 이름을 지정합니다.
    restart: always # 컨테이너가 실패하거나 Docker가 재시작될 때 자동으로 컨테이너를 재시작하도록 설정합니다.
    ports:
      - "6379:6379" # Redis 서버의 기본 포트 6379를 호스트의 같은 포트에 바인딩합니다. 이 설정은 외부에서 Redis 서버에 접근할 수 있게 합니다.
    networks:
      - msa-network # 이 컨테이너가 연결될 네트워크. 이 네트워크 설정을 통해 다른 서비스와의 네트워크 분리 및 통신을 관리합니다.
    command: [ "sh", "-c", "redis-server --notify-keyspace-events Ex" ]

  # zookeeper 설정
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    container_name: zookeeper
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - msa-network

  # kafka-1 설정
  kafka-1:
    image: confluentinc/cp-kafka:5.5.1
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      TZ: Asia/Seoul
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:29092,EXTERNAL://localhost:9092
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3 # 자동으로 생성되는 topic의 기본 복제 수 (브로커수)
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG_RETENTION_HOURS: 24 # 메시지 보존 기간을 24시간으로 설정
      KAFKA_COMPRESSION_TYPE: "gzip" # 메시지 압축 방식 설정
      KAFKA_SEGMENT_BYTES: 1073741824 # 로그 세그먼트 크기를 1GB로 설정
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m" # JVM 힙 메모리 설정
    networks:
      - msa-network

  # kafka-2 설정
  kafka-2:
    image: confluentinc/cp-kafka:5.5.1
    container_name: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      TZ: Asia/Seoul
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:29093,EXTERNAL://localhost:9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3 # 자동으로 생성되는 topic의 기본 복제 수 (브로커수)
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG_RETENTION_HOURS: 24 # 메시지 보존 기간을 24시간으로 설정
      KAFKA_COMPRESSION_TYPE: "gzip" # 메시지 압축 방식 설정
      KAFKA_SEGMENT_BYTES: 1073741824 # 로그 세그먼트 크기를 1GB로 설정
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m" # JVM 힙 메모리 설정
    networks:
      - msa-network

  # kafka-3 설정
  kafka-3:
    image: confluentinc/cp-kafka:5.5.1
    container_name: kafka-3
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      TZ: Asia/Seoul
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:29094,EXTERNAL://localhost:9094
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3 # 자동으로 생성되는 topic의 기본 복제 수 (브로커수)
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG_RETENTION_HOURS: 24 # 메시지 보존 기간을 24시간으로 설정
      KAFKA_COMPRESSION_TYPE: "gzip" # 메시지 압축 방식 설정
      KAFKA_SEGMENT_BYTES: 1073741824 # 로그 세그먼트 크기를 1GB로 설정
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m" # JVM 힙 메모리 설정
    networks:
      - msa-network

  # kafka-ui 설정
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - TZ=Asia/Seoul
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:29092,kafka-2:29093,kafka-3:29094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:32181
    networks:
      - msa-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 8llow8llowme    # MySQL 루트 비밀번호
      MYSQL_DATABASE: spring              # 기본 데이터베이스 이름
    networks:
      - msa-network

networks:
  msa-network:
    external: true
