server:
  port: 8443
  http:
    version: V_1_1 # HTTP/1.1 강제 설정
  ssl:
    enabled: false
#    key-store: classpath:keystore.p12
#    key-store-password: 8llow8llowme
#    key-store-type: PKCS12
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
#      httpclient:
#        ssl:
#          key-store: classpath:keystore.p12
#          key-store-password: 8llow8llowme
#          key-store-type: PKCS12
#          trusted-x509-certificates:
#            - classpath:authserver_cert.pem # 인증 서버의 인증서 경로
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:9443'
              - 'http://localhost:8443'
            allow-credentials: true
            allowedHeaders: "*"
            allowedMethods:
              - PUT
              - GET
              - POST
              - DELETE
              - PATCH
              - OPTIONS
      routes:
        - id: auth-service
          uri: http://localhost:9443
          predicates:
            - Path=/auth/**
        - id: member-service
          uri: http://localhost:9001
          predicates:
            - Path=/member/**
          filters:
            - name: AuthValidationFilter
        - id: community-service
          uri: lb://community-service
          predicates:
            - Path=/community/**
          filters:
            - name: AuthValidationFilter
#        - id: chat-service
#          uri: lb://chat-service
#          predicates:
#            - Path=/chat/**
#          filters:
#            - name: AuthValidationFilter

    discovery:
      locator:
        enabled: true
  main:
    web-application-type: reactive

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

logging:
  level:
    root: INFO
    org.springframework.boot: DEBUG
    org.springframework.core.env: DEBUG
